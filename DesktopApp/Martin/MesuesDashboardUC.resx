<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rKbm/0nCW2382r2gAAAAAElFTkSuQmCC
</value>
  </data>
</root>